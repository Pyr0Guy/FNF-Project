In file included from /home/admin/disk2/projects/FNF-Project/src/states/../include/states/Playstate.hpp:4,
                 from /home/admin/disk2/projects/FNF-Project/src/states/Playstate.cpp:1:
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp: In instantiation of ‘static constexpr auto entt::internal::uses_allocator_construction<Type>::args(const Allocator&, Params&& ...) [with Allocator = std::allocator<SpriteComponent>; Params = {const char (&)[23]}; Type = SpriteComponent]’:
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:2066:164:   required from ‘constexpr Type* entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:17171:58:   required from ‘auto entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::emplace_element(Entity, bool, Args&& ...) [with Args = {const char (&)[23]}; Type = SpriteComponent; Entity = entt::entity; Allocator = std::allocator<SpriteComponent>; <template-parameter-1-4> = void]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:17571:24:   required from ‘entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::value_type& entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::emplace(entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::entity_type, Args&& ...) [with Args = {const char (&)[23]}; Type = SpriteComponent; Entity = entt::entity; Allocator = std::allocator<SpriteComponent>; <template-parameter-1-4> = void; entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::value_type = SpriteComponent; entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:24471:37:   required from ‘decltype(auto) entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::emplace(entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::entity_type, Args&& ...) [with Args = {const char (&)[23]}; Type = entt::basic_storage<SpriteComponent, entt::entity, std::allocator<SpriteComponent>, void>; Registry = entt::basic_registry<>; entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:38251:72:   required from ‘decltype(auto) entt::basic_registry<Entity, <template-parameter-1-2> >::emplace(entt::basic_registry<Entity, <template-parameter-1-2> >::entity_type, Args&& ...) [with Type = SpriteComponent; Args = {const char (&)[23]}; Entity = entt::entity; Allocator = std::allocator<entt::entity>; entt::basic_registry<Entity, <template-parameter-1-2> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/Playstate.cpp:16:71:   required from here
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:1966:27: error: static assertion failed: Ill-formed request
             static_assert(std::uses_allocator_v<Type, Allocator>, "Ill-formed request");
                           ^~~
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:1971:31: error: static assertion failed: Ill-formed request
                 static_assert(std::is_constructible_v<Type, Params..., const Allocator &>, "Ill-formed request");
                               ^~~
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp: In instantiation of ‘entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]::<lambda(auto:3&& ...)> [with auto:3 = {const char (&)[23], const std::allocator<SpriteComponent>&}]’:
/usr/include/c++/8/type_traits:2283:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]::<lambda(auto:3&& ...)>; _Args = {const char (&)[23], const std::allocator<SpriteComponent>&}]’
/usr/include/c++/8/type_traits:2294:55:   required from ‘struct std::__result_of_impl<false, false, entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]::<lambda(auto:3&& ...)>, const char (&)[23], const std::allocator<SpriteComponent>&>’
/usr/include/c++/8/type_traits:2299:12:   required from ‘struct std::__invoke_result<entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]::<lambda(auto:3&& ...)>, const char (&)[23], const std::allocator<SpriteComponent>&>’
/usr/include/c++/8/bits/invoke.h:89:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]::<lambda(auto:3&& ...)>; _Args = {const char (&)[23], const std::allocator<SpriteComponent>&}]’
/usr/include/c++/8/tuple:1678:27:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:2066:22:   required from ‘constexpr Type* entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:17171:58:   required from ‘auto entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::emplace_element(Entity, bool, Args&& ...) [with Args = {const char (&)[23]}; Type = SpriteComponent; Entity = entt::entity; Allocator = std::allocator<SpriteComponent>; <template-parameter-1-4> = void]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:17571:24:   required from ‘entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::value_type& entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::emplace(entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::entity_type, Args&& ...) [with Args = {const char (&)[23]}; Type = SpriteComponent; Entity = entt::entity; Allocator = std::allocator<SpriteComponent>; <template-parameter-1-4> = void; entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::value_type = SpriteComponent; entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:24471:37:   required from ‘decltype(auto) entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::emplace(entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::entity_type, Args&& ...) [with Args = {const char (&)[23]}; Type = entt::basic_storage<SpriteComponent, entt::entity, std::allocator<SpriteComponent>, void>; Registry = entt::basic_registry<>; entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:38251:72:   required from ‘decltype(auto) entt::basic_registry<Entity, <template-parameter-1-2> >::emplace(entt::basic_registry<Entity, <template-parameter-1-2> >::entity_type, Args&& ...) [with Type = SpriteComponent; Args = {const char (&)[23]}; Entity = entt::entity; Allocator = std::allocator<entt::entity>; entt::basic_registry<Entity, <template-parameter-1-2> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/Playstate.cpp:16:71:   required from here
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:2066:109: error: no matching function for call to ‘SpriteComponent::SpriteComponent(const char [23], const std::allocator<SpriteComponent>&)’
     return std::apply([value](auto &&...curr) { return new(value) Type(std::forward<decltype(curr)>(curr)...); }, internal::uses_allocator_construction<Type>::args(allocator, std::forward<Args>(args)...));
                                                                                                             ^
In file included from /home/admin/disk2/projects/FNF-Project/src/states/Playstate.cpp:4:
/home/admin/disk2/projects/FNF-Project/src/states/../include/components/SpriteComponent.hpp:10:5: note: candidate: ‘SpriteComponent::SpriteComponent(std::__cxx11::string&)’
     SpriteComponent(std::string& filepath);
     ^~~~~~~~~~~~~~~
/home/admin/disk2/projects/FNF-Project/src/states/../include/components/SpriteComponent.hpp:10:5: note:   candidate expects 1 argument, 2 provided
/home/admin/disk2/projects/FNF-Project/src/states/../include/components/SpriteComponent.hpp:7:7: note: candidate: ‘constexpr SpriteComponent::SpriteComponent(const SpriteComponent&)’
 class SpriteComponent
       ^~~~~~~~~~~~~~~
/home/admin/disk2/projects/FNF-Project/src/states/../include/components/SpriteComponent.hpp:7:7: note:   candidate expects 1 argument, 2 provided
In file included from /home/admin/disk2/projects/FNF-Project/src/states/../include/states/Playstate.hpp:4,
                 from /home/admin/disk2/projects/FNF-Project/src/states/Playstate.cpp:1:
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp: In instantiation of ‘constexpr Type* entt::uninitialized_construct_using_allocator(Type*, const Allocator&, Args&& ...) [with Type = SpriteComponent; Allocator = std::allocator<SpriteComponent>; Args = {const char (&)[23]}]’:
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:17171:58:   required from ‘auto entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::emplace_element(Entity, bool, Args&& ...) [with Args = {const char (&)[23]}; Type = SpriteComponent; Entity = entt::entity; Allocator = std::allocator<SpriteComponent>; <template-parameter-1-4> = void]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:17571:24:   required from ‘entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::value_type& entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::emplace(entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::entity_type, Args&& ...) [with Args = {const char (&)[23]}; Type = SpriteComponent; Entity = entt::entity; Allocator = std::allocator<SpriteComponent>; <template-parameter-1-4> = void; entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::value_type = SpriteComponent; entt::basic_storage<Type, <template-parameter-1-2>, <template-parameter-1-3>, <template-parameter-1-4> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:24471:37:   required from ‘decltype(auto) entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::emplace(entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::entity_type, Args&& ...) [with Args = {const char (&)[23]}; Type = entt::basic_storage<SpriteComponent, entt::entity, std::allocator<SpriteComponent>, void>; Registry = entt::basic_registry<>; entt::basic_sigh_mixin< <template-parameter-1-1>, <template-parameter-1-2> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:38251:72:   required from ‘decltype(auto) entt::basic_registry<Entity, <template-parameter-1-2> >::emplace(entt::basic_registry<Entity, <template-parameter-1-2> >::entity_type, Args&& ...) [with Type = SpriteComponent; Args = {const char (&)[23]}; Entity = entt::entity; Allocator = std::allocator<entt::entity>; entt::basic_registry<Entity, <template-parameter-1-2> >::entity_type = entt::entity]’
/home/admin/disk2/projects/FNF-Project/src/states/Playstate.cpp:16:71:   required from here
/home/admin/disk2/projects/FNF-Project/src/states/../include/states/../entt/entt.hpp:2066:204: error: void value not ignored as it ought to be
     return std::apply([value](auto &&...curr) { return new(value) Type(std::forward<decltype(curr)>(curr)...); }, internal::uses_allocator_construction<Type>::args(allocator, std::forward<Args>(args)...));
                                                                                                                                                                                                            ^
make[2]: *** [CMakeFiles/FNF-FanGame.dir/build.make:115: CMakeFiles/FNF-FanGame.dir/src/states/Playstate.cpp.o] Ошибка 1
make[1]: *** [CMakeFiles/Makefile2:155: CMakeFiles/FNF-FanGame.dir/all] Ошибка 2
make: *** [Makefile:152: all] Ошибка 2
